module.exports = class Data1665228828814 {
  name = 'Data1665228828814'

  async up(db) {
    await db.query(`CREATE TABLE "added_dai_to_voting" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "amount" numeric NOT NULL, "votes" numeric NOT NULL, CONSTRAINT "PK_9e1e399cbc921bb8d6aedb65ad5" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "added_zoo_to_voting" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "amount" numeric NOT NULL, "votes" numeric NOT NULL, CONSTRAINT "PK_f1b19d5fc640fd1b74584b053c6" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "chosen_winner" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "fighter1" numeric NOT NULL, "fighter2" numeric NOT NULL, "winner" boolean NOT NULL, "pair_index" numeric NOT NULL, "played_pairs_amount" numeric NOT NULL, CONSTRAINT "PK_ba4bdf67df8f2b9baf947aef79a" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "claimed_reward_from_staking" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "staker" text, "staking_position_id" numeric NOT NULL, "beneficiary" text, "y_token_reward" numeric NOT NULL, "dai_reward" numeric NOT NULL, CONSTRAINT "PK_88b9a4dd94bc65e896a84aeb4ea" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "claimed_reward_from_voting" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "beneficiary" text, "y_token_reward" numeric NOT NULL, "dai_reward" numeric NOT NULL, "voting_position_id" numeric NOT NULL, CONSTRAINT "PK_95804e8f808711ad53822a99405" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "created_staker_position" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "staker" text, "staking_position_id" numeric NOT NULL, CONSTRAINT "PK_4210a7c4e3f2e4db712229ac488" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "created_voting_position" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "dai_amount" numeric NOT NULL, "votes" numeric NOT NULL, "voting_position_id" numeric NOT NULL, CONSTRAINT "PK_9fb98405e3234d450410afc5cdd" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "epoch_updated" ("id" character varying NOT NULL, "date" numeric NOT NULL, "new_epoch" numeric NOT NULL, CONSTRAINT "PK_92bb854e79a4798c6c53b1e7851" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "liquidated_voting_position" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "beneficiary" text, "voting_position_id" numeric NOT NULL, "zoo_returned" numeric NOT NULL, "dai_received" numeric NOT NULL, CONSTRAINT "PK_072eff86807e01c0de2278f2597" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "paired_nft" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "fighter1" numeric NOT NULL, "fighter2" numeric NOT NULL, "pair_index" numeric NOT NULL, CONSTRAINT "PK_23ba08ff579bcd1c08f595ae614" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "recomputed_dai_votes" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "new_votes" numeric NOT NULL, "old_votes" numeric NOT NULL, CONSTRAINT "PK_a7df91f5164fbf3d5a17dd27697" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "recomputed_zoo_votes" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "new_votes" numeric NOT NULL, "old_votes" numeric NOT NULL, CONSTRAINT "PK_2c7d96f08ea7b606d1f20038f8e" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "removed_staker_position" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "staker" text, "staking_position_id" numeric NOT NULL, CONSTRAINT "PK_5d7ff26fcdcda8555848634f964" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "withdrawed_dai_from_voting" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "dai_number" numeric NOT NULL, "beneficiary" text, CONSTRAINT "PK_7d162daaf6e3fc062a71e9c593f" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "withdrawed_zoo_from_voting" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "zoo_number" numeric NOT NULL, "beneficiary" text, CONSTRAINT "PK_3ac6fcf3a0553b9b24646185c0a" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "base_zoo_functions_ownership_transferred" ("id" character varying NOT NULL, "previous_owner" text, "new_owner" text, CONSTRAINT "PK_7ea719c04c8db071993cf60da81" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "zoo_governance_ownership_transferred" ("id" character varying NOT NULL, "previous_owner" text, "new_owner" text, CONSTRAINT "PK_3d4f89866775d1c51cebfdc608e" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_staking_position_approval" ("id" character varying NOT NULL, "owner" text, "approved" text, "token_id" numeric NOT NULL, CONSTRAINT "PK_92b92d1e2fd889d37b4a4d24a43" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_staking_position_approval_for_all" ("id" character varying NOT NULL, "owner" text, "operator" text, "approved" boolean NOT NULL, CONSTRAINT "PK_83b3374d4ccad5f88913cdeefee" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "new_contract_allowed" ("id" character varying NOT NULL, "token" text, CONSTRAINT "PK_ccaa47777b188542754664ebd66" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_staking_position_nft_battle_arena_setted" ("id" character varying NOT NULL, "nft_battle_arena" text, CONSTRAINT "PK_9835353482f44808fd821bae247" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_staking_position_ownership_transferred" ("id" character varying NOT NULL, "previous_owner" text, "new_owner" text, CONSTRAINT "PK_3bf1799d42a55f6cf7ced30db1f" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_staking_position_transfer" ("id" character varying NOT NULL, "from" text, "to" text, "token_id" numeric NOT NULL, CONSTRAINT "PK_6e1349ab85d91363bf53e5ba921" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_voting_position_approval" ("id" character varying NOT NULL, "owner" text, "approved" text, "token_id" numeric NOT NULL, CONSTRAINT "PK_b7f7a4dddedb354be2fa5247434" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_voting_position_approval_for_all" ("id" character varying NOT NULL, "owner" text, "operator" text, "approved" boolean NOT NULL, CONSTRAINT "PK_7db32b46c81cb669e38589e72ee" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_voting_position_nft_battle_arena_setted" ("id" character varying NOT NULL, "nft_battle_arena" text, CONSTRAINT "PK_78ef6e8768733224f260d762d41" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_voting_position_ownership_transferred" ("id" character varying NOT NULL, "previous_owner" text, "new_owner" text, CONSTRAINT "PK_be2544fc90d12fc73ea792f4471" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_voting_position_transfer" ("id" character varying NOT NULL, "from" text, "to" text, "token_id" numeric NOT NULL, CONSTRAINT "PK_2171fb1ae30d8814fade4d341f0" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_added_dai_to_voting" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "amount" numeric NOT NULL, "votes" numeric NOT NULL, CONSTRAINT "PK_c63d2b573ce4bfebd81f1ec5088" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_added_zoo_to_voting" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "amount" numeric NOT NULL, "votes" numeric NOT NULL, CONSTRAINT "PK_8c7bd71723757ccdee90562dbc0" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_chosen_winner" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "fighter1" numeric NOT NULL, "fighter2" numeric NOT NULL, "winner" boolean NOT NULL, "pair_index" numeric NOT NULL, "played_pairs_amount" numeric NOT NULL, CONSTRAINT "PK_fe311472e7dcdb048ad8a620428" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_claimed_reward_from_staking" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "staker" text, "staking_position_id" numeric NOT NULL, "beneficiary" text, "y_token_reward" numeric NOT NULL, "dai_reward" numeric NOT NULL, CONSTRAINT "PK_67499465fc572143e3404d92a5c" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_claimed_reward_from_voting" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "beneficiary" text, "y_token_reward" numeric NOT NULL, "dai_reward" numeric NOT NULL, "voting_position_id" numeric NOT NULL, CONSTRAINT "PK_b77494b5b266cba127398049321" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_created_staker_position" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "staker" text, "staking_position_id" numeric NOT NULL, CONSTRAINT "PK_41dd1ff3f7b2b2bc2ba3fc3cf8f" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_created_voting_position" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "dai_amount" numeric NOT NULL, "votes" numeric NOT NULL, "voting_position_id" numeric NOT NULL, CONSTRAINT "PK_218fead2df2fc7ecf2af0c68a56" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_epoch_updated" ("id" character varying NOT NULL, "date" numeric NOT NULL, "new_epoch" numeric NOT NULL, CONSTRAINT "PK_4b7de41cd53ec0917f88a993875" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_liquidated_voting_position" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "beneficiary" text, "voting_position_id" numeric NOT NULL, "zoo_returned" numeric NOT NULL, "dai_received" numeric NOT NULL, CONSTRAINT "PK_ef9b14513192ef96de84488274a" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_ownership_transferred" ("id" character varying NOT NULL, "previous_owner" text, "new_owner" text, CONSTRAINT "PK_3bf08894d168fe36792051d671c" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_paired_nft" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "fighter1" numeric NOT NULL, "fighter2" numeric NOT NULL, "pair_index" numeric NOT NULL, CONSTRAINT "PK_0c5553fcb325cbfc345593dd32b" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_recomputed_dai_votes" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "new_votes" numeric NOT NULL, "old_votes" numeric NOT NULL, CONSTRAINT "PK_4700d7678e357f3e2db26f7b905" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_recomputed_zoo_votes" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "new_votes" numeric NOT NULL, "old_votes" numeric NOT NULL, CONSTRAINT "PK_0fe939b2ddca0f69a152f47aebd" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_removed_staker_position" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "staker" text, "staking_position_id" numeric NOT NULL, CONSTRAINT "PK_21975708f281efe1a018fa79482" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_withdrawed_dai_from_voting" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "dai_number" numeric NOT NULL, "beneficiary" text, CONSTRAINT "PK_9769036ae7dec8f1287f75e600c" PRIMARY KEY ("id"))`)
    await db.query(`CREATE TABLE "nft_battle_arena_withdrawed_zoo_from_voting" ("id" character varying NOT NULL, "current_epoch" numeric NOT NULL, "voter" text, "staking_position_id" numeric NOT NULL, "voting_position_id" numeric NOT NULL, "zoo_number" numeric NOT NULL, "beneficiary" text, CONSTRAINT "PK_47feaa9008eacff5bc80b1cf18e" PRIMARY KEY ("id"))`)
  }

  async down(db) {
    await db.query(`DROP TABLE "added_dai_to_voting"`)
    await db.query(`DROP TABLE "added_zoo_to_voting"`)
    await db.query(`DROP TABLE "chosen_winner"`)
    await db.query(`DROP TABLE "claimed_reward_from_staking"`)
    await db.query(`DROP TABLE "claimed_reward_from_voting"`)
    await db.query(`DROP TABLE "created_staker_position"`)
    await db.query(`DROP TABLE "created_voting_position"`)
    await db.query(`DROP TABLE "epoch_updated"`)
    await db.query(`DROP TABLE "liquidated_voting_position"`)
    await db.query(`DROP TABLE "paired_nft"`)
    await db.query(`DROP TABLE "recomputed_dai_votes"`)
    await db.query(`DROP TABLE "recomputed_zoo_votes"`)
    await db.query(`DROP TABLE "removed_staker_position"`)
    await db.query(`DROP TABLE "withdrawed_dai_from_voting"`)
    await db.query(`DROP TABLE "withdrawed_zoo_from_voting"`)
    await db.query(`DROP TABLE "base_zoo_functions_ownership_transferred"`)
    await db.query(`DROP TABLE "zoo_governance_ownership_transferred"`)
    await db.query(`DROP TABLE "nft_staking_position_approval"`)
    await db.query(`DROP TABLE "nft_staking_position_approval_for_all"`)
    await db.query(`DROP TABLE "new_contract_allowed"`)
    await db.query(`DROP TABLE "nft_staking_position_nft_battle_arena_setted"`)
    await db.query(`DROP TABLE "nft_staking_position_ownership_transferred"`)
    await db.query(`DROP TABLE "nft_staking_position_transfer"`)
    await db.query(`DROP TABLE "nft_voting_position_approval"`)
    await db.query(`DROP TABLE "nft_voting_position_approval_for_all"`)
    await db.query(`DROP TABLE "nft_voting_position_nft_battle_arena_setted"`)
    await db.query(`DROP TABLE "nft_voting_position_ownership_transferred"`)
    await db.query(`DROP TABLE "nft_voting_position_transfer"`)
    await db.query(`DROP TABLE "nft_battle_arena_added_dai_to_voting"`)
    await db.query(`DROP TABLE "nft_battle_arena_added_zoo_to_voting"`)
    await db.query(`DROP TABLE "nft_battle_arena_chosen_winner"`)
    await db.query(`DROP TABLE "nft_battle_arena_claimed_reward_from_staking"`)
    await db.query(`DROP TABLE "nft_battle_arena_claimed_reward_from_voting"`)
    await db.query(`DROP TABLE "nft_battle_arena_created_staker_position"`)
    await db.query(`DROP TABLE "nft_battle_arena_created_voting_position"`)
    await db.query(`DROP TABLE "nft_battle_arena_epoch_updated"`)
    await db.query(`DROP TABLE "nft_battle_arena_liquidated_voting_position"`)
    await db.query(`DROP TABLE "nft_battle_arena_ownership_transferred"`)
    await db.query(`DROP TABLE "nft_battle_arena_paired_nft"`)
    await db.query(`DROP TABLE "nft_battle_arena_recomputed_dai_votes"`)
    await db.query(`DROP TABLE "nft_battle_arena_recomputed_zoo_votes"`)
    await db.query(`DROP TABLE "nft_battle_arena_removed_staker_position"`)
    await db.query(`DROP TABLE "nft_battle_arena_withdrawed_dai_from_voting"`)
    await db.query(`DROP TABLE "nft_battle_arena_withdrawed_zoo_from_voting"`)
  }
}
