type AddedDaiToVoting @entity {
  id: ID!
  currentEpoch: BigInt! @index
  voter: String
  stakingPositionId: BigInt! @index
  votingPositionId: BigInt! @index
  amount: BigInt!
  votes: BigInt!
  timestamp: DateTime! @index
}

type AddedZooToVoting @entity {
  id: ID!
  currentEpoch: BigInt! @index
  voter: String
  stakingPositionId: BigInt! @index
  votingPositionId: BigInt! @index
  amount: BigInt!
  votes: BigInt!
  timestamp: DateTime! @index
}

type ChosenWinner @entity {
  id: ID!
  currentEpoch: BigInt!
  fighter1: BigInt! @index
  fighter2: BigInt! @index
  winner: Boolean! # bool
  pairIndex: BigInt!
  playedPairsAmount: BigInt!
  timestamp: DateTime! @index
}

type ClaimedRewardFromStaking @entity {
  id: ID!
  currentEpoch: BigInt!
  staker: String
  stakingPositionId: BigInt! @index
  beneficiary: String @index
  yTokenReward: BigInt!
  daiReward: BigInt!
  timestamp: DateTime! @index
}

type ClaimedRewardFromVoting @entity {
  id: ID!
  currentEpoch: BigInt! @index
  voter: String
  stakingPositionId: BigInt! @index
  beneficiary: String @index
  yTokenReward: BigInt!
  daiReward: BigInt!
  votingPositionId: BigInt!
  timestamp: DateTime! @index
}

type Project @entity {
  id: ID!
  address: String!
  name: String! @index
  symbol: String! @index
  positions: [CreatedStakerPosition!] @derivedFrom(field: "project")
}

type CreatedStakerPosition @entity {
  id: ID!
  currentEpoch: BigInt! @index
  staker: String @index
  stakingPositionId: BigInt!
  isDeleted: Boolean!
  timestamp: DateTime! @index
  project: Project!
}

type CreatedVotingPosition @entity {
  id: ID!
  currentEpoch: BigInt!
  voter: String @index
  stakingPositionId: BigInt! @index
  daiAmount: BigInt!
  votes: BigInt!
  votingPositionId: BigInt!
  isDeleted: Boolean!
  timestamp: DateTime! @index
}

type LiquidatedVotingPosition @entity {
  id: ID!
  currentEpoch: BigInt!
  voter: String @index
  stakingPositionId: BigInt! @index
  beneficiary: String @index
  votingPositionId: BigInt! @index
  zooReturned: BigInt!
  daiReceived: BigInt!
  timestamp: DateTime! @index
}

type PairedNft @entity {
  id: ID!
  currentEpoch: BigInt! @index
  fighter1: BigInt! @index
  fighter2: BigInt! @index
  pairIndex: BigInt!
  timestamp: DateTime! @index
}

type RemovedStakerPosition @entity {
  id: ID!
  currentEpoch: BigInt!
  staker: String
  stakingPositionId: BigInt!
  timestamp: DateTime! @index
}

type WithdrawedDaiFromVoting @entity {
  id: ID!
  currentEpoch: BigInt!
  voter: String
  stakingPositionId: BigInt!
  votingPositionId: BigInt!
  daiNumber: BigInt!
  beneficiary: String
  timestamp: DateTime! @index
}

type WithdrawedZooFromVoting @entity {
  id: ID!
  currentEpoch: BigInt!
  voter: String
  stakingPositionId: BigInt!
  votingPositionId: BigInt!
  zooNumber: BigInt!
  beneficiary: String
  timestamp: DateTime! @index
}

type ZooUnlocked @entity {
  id: ID!
  voter: String @index
  collection: String @index
  amount: BigInt!
  timestamp: DateTime! @index
}

type VotedForCollection @entity {
  id: ID!
  collection: String @index
  voter: String @index
  amount: BigInt!
  timestamp: DateTime! @index
}

type FaucetGiven @entity {
  id: ID!
  user: String! @index
  timestamp: DateTime! @index
}
